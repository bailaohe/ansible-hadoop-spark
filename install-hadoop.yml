- hosts: cluster
  remote_user: "{{ remote_user }}"

  tasks:
  - name: unzip the hadoop to service directory
    action: unarchive src={{ source_dir }}/hadoop-{{ hadoop_version }}.tar.gz dest={{ service_dir }} copy=no
    environment:
      HADOOP_HOME: "{{ service_dir }}/hadoop-{{ hadoop_version }}"

  - name: generate hadoop-env.sh for hadoop
    template: src=templates/hadoop-env.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/hadoop-env.sh owner={{ remote_user }} mode=0644

  - name: generate core-site.xml for hadoop
    template: src=templates/core-site.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/core-site.xml owner={{ remote_user }} mode=0644

  - name: generate slaves for hadoop
    template: src=templates/slaves dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/slaves owner={{ remote_user }} mode=0644

  - name: generate hdfs-site.xml for hadoop
    template: src=templates/hdfs-site.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/hdfs-site.xml owner={{ remote_user }} mode=0644

  - name: generate yarn-env.sh for hadoop
    template: src=templates/yarn-env.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/yarn-env.sh owner={{ remote_user }} mode=0644

  - name: generate yarn-site.xml for hadoop
    template: src=templates/yarn-site.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/yarn-site.xml owner={{ remote_user }} mode=0644

  - name: generate mapred-site.xml for hadoop
    template: src=templates/mapred-site.j2 dest={{ service_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/mapred-site.xml owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop bson-3.0.4.jar
    action: copy src=./lib-files/bson-3.0.4.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/bson-3.0.4.jar owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop mongo-hadoop-hive-1.5.0-SNAPSHOT.jar
    action: copy src=./lib-files/mongo-hadoop-hive-1.5.0-SNAPSHOT.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/mongo-hadoop-hive-1.5.0-SNAPSHOT.jar owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop mongodb-driver-3.0.4.jar
    action: copy src=./lib-files/mongodb-driver-3.0.4.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/mongodb-driver-3.0.4.jar owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop mongo-hadoop-core-1.5.0-SNAPSHOT.jar
    action: copy src=./lib-files/mongo-hadoop-core-1.5.0-SNAPSHOT.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/mongo-hadoop-core-1.5.0-SNAPSHOT.jar owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop mongo-java-driver-3.0.4.jar
    action: copy src=./lib-files/mongo-java-driver-3.0.4.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/mongo-java-driver-3.0.4.jar owner={{ remote_user }} mode=0644

  - name: copy lib files to support mongo-hadoop mongodb-driver-core-3.0.4.jar
    action: copy src=./lib-files/mongodb-driver-core-3.0.4.jar dest={{ service_dir }}/hadoop-{{ hadoop_version }}/share/hadoop/common/lib/mongodb-driver-core-3.0.4.jar owner={{ remote_user }} mode=0644

  - name: delete hadoop-data directory
    action: command rm -rf {{ data_dir }}/hadoop

- hosts: data1
  remote_user: "{{ remote_user }}"
  tasks:
  - name: format the hdfs filesystem
    action: command {{ service_dir }}/hadoop-{{ hadoop_version }}/bin/hdfs namenode -format cluster
